@model GestorDeProyectosMVC.ViewModels.ViewProyecto

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Proyecto</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="Titulo" class="control-label"></label>
                <input asp-for="Titulo" class="form-control" />
                <span asp-validation-for="Titulo" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="EsVisible" /> @Html.DisplayNameFor(model => model.EsVisible)
                </label>
                <hr />
                <label>Usuarios del proyecto</label>
                <ul>
                    @{ 
                        foreach(var usuario in Model.usuarios)
                            {
                                <li>@usuario.Nombre  <a asp-controller="Proyecto" asp-action="EliminarUsuarioDeProyecto" asp-route-idProyecto="@Model.Id" asp-route-idUsuario="@usuario.Id">Borrar</a></li>
                            }
                    }
                </ul>
                <div class="form-group">
                    <label asp-for="UsuariosId" class="control-label"></label>
                    <select multiple asp-for="UsuariosId" class="form-control custom-select" asp-items="ViewBag.Usuarios"></select>
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
